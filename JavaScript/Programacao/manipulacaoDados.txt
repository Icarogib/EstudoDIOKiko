string.concat(outraString) - soma as duas strings
ou
string.concat(" teste") - soma teste na string
ou
string = nome + " " + outroNome - faz a nova string
ou
string = '${nome} ${outroNome}


split - separa os argumentos da string
string.split("") - separa tudo (transforma tudo em um array)
string.split("!") - separa apenas entre as exclamacoes

string.includes("palavra") - retorna se a string possui a palavra

string.replace("!", "X") - substitui ! por X na string


tudo isso é necessario atribuir a uma variavel


Array:

var array =[] - declara um array

array.push(x) - coloca x dentro do array

array.pop() - retira o ultimo valor colocado no array

array.shift() - remove o primeiro elemento do array

array.unshift(z) - coloca z no primeiro elemento do array

array.length - tamanho do array

array.reverse - reverte o array, o ultimo vira o primeiro, e o primeiro o ultimo

funcao(...constante) - cada valor se torna independente, se um array de [1, 2, 3] recebe
 			... entao, eh passado na funcao 1, 2 e 3 separadamente.
			resumindo, joga apenas os elementos de dentro para onde vc quer;


This e manipulando:

funcao.call(constante); - faz a funcao com os valores dentro de constante.

funcao.call(constante, a, b) - passa os valores da funcao, mais os de dentro de a e b.


funcao.apply(constante) - mesmo que o call, porem a diferenca eh na hora de passar argumentos.

funcao.apply(constante, [a, b]) - para passar argumentos eh necessario passar em um array, ao inves de virgula para separa-lo.


let variavel = funcao.bind({ propriedade: 'valor' }) - clona a funcao, e utiliza o valor passado no valor.


Map, ForEach, filter

map - Percorre o array e executa uma função em cada um de seus itens
const array = [1, 2, 3, 4, 5]; - cria array;

array.map((item) => item * 2); //duplica cada elemento do array. Usando arrow function para passar a funcao callback.
array.map(callback, thisArg) - base map; //retorna sempre um novo array				

foreach - retorno: o método map retorna um array, enquanto forEach retorna “undefined”
array.forEach(callback, thisArg) - base foreach;
array.forEach((item) => item * 2)// Retorna undefined, para receber esse valor, necessita de uma variavel exterior (const ou var)


const frutas = ['maçã fuji', 'maçã verde', 'laranja', abacaxi'];

frutas.filter((fruta) => fruta.includes('maçã')); //retorna: ['maçã fuji', 'maçã verde']; 
			Percorre um array e retorna outro contendo apenas os itens que passaram por determinada validação
			sempre retorna um novo array

array.filter(callback, thisArg) - base filter;


-Reduce:
Percorre um array e acumula o valor de cada operação para retornar um valor único no final
retorna apenas um valor.


array.reduce(callbackFn, initialValue) - base

const callbackFn = function(accumulator, currentValue, index, array)
		//acumulador todas as chamadas do callback
		//currentValue eh o elemento atual acessado pela função




Extra: 
var.join("texto"); - junta o texto em cada separacao de uma string

function confTam (..args){
	console.log(args.length) = retorna quantos parametros foram passados em uma funcao
}